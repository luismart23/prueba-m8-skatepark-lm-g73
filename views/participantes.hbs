{{!-- views/participantes.hbs --}}

{{#each skaters}}
<div class="skater-profile">

    <hr style="border-color: #000000; border-width: 2px; border-style: solid;">

    <form id="rellenarFormularioSkater" onsubmit="updateSkater(event, '{{this.id}}');">
        <div class="form-group">
            <label for="nombre">Nombre:</label>
            <input type="text" class="form-control" id="nombre" name="nombre" value="{{this.nombre}}" required>
        </div>
        <div class="form-group">
            <label for="password">Contraseña:</label>
            <input type="password" class="form-control" id="password" name="password" required>
        </div>
        <div class="form-group">
            <label for="repitaPassword">Repita Contraseña:</label>
            <input type="password" class="form-control" id="repitaPassword" name="repitaPassword" required>
        </div>
        <div class="form-group">
            <label for="anos_experiencia">Años de Experiencia:</label>
            <input type="number" class="form-control" id="anos_experiencia" name="anos_experiencia"
                value="{{this.anos_experiencia}}" required>
        </div>
        <div class="form-group">
            <label for="especialidad">Especialidad:</label>
            <input type="text" class="form-control" id="especialidad" name="especialidad" value="{{this.especialidad}}"
                required>
        </div>
        <button type="submit" class="btn btn-primary">Actualizar</button>
    </form>
    <button class="btn btn-danger" onclick="confirmAndDelete('{{this.id}}')">Eliminar</button>
</div>
{{/each}}

<script>
    const URL_DOMAIN = '{{URL_DOMAIN}}';

    function confirmAndDelete(id) {
        if (confirm('¿Estás seguro de que deseas eliminar este skater? Esta acción no se puede deshacer.')) {
            deleteSkater(id); // Llamar a la función deleteSkater con el ID del skater
        }
    }

    function deleteSkater(id) {
        axios.delete(`${URL_DOMAIN}/skater/${id}`)
            .then(response => {
                alert('Skater eliminado correctamente');
                window.location.reload(); // Recargar la página para ver los cambios actualizados
            })
            .catch(error => {
                alert('Error al eliminar skater');
                console.error(error);
            });
    }

    function updateSkater(event, id) {
        event.preventDefault();

        const formData = new FormData(event.target);

        const skaterData = {
            nombre: formData.get('nombre'),
            password: formData.get('password'),
            repitaPassword: formData.get('repitaPassword'),
            anos_experiencia: formData.get('anos_experiencia'),
            especialidad: formData.get('especialidad')
        };

        axios.put(`${URL_DOMAIN}/skater/${id}`, skaterData)
            .then(response => {
                alert('Perfil actualizado correctamente');
                window.location.reload(); // Recargar la página para ver los cambios actualizados
            })
            .catch(error => {
                alert('Error al actualizar el perfil');
                console.error(error);
            });
    }
</script>